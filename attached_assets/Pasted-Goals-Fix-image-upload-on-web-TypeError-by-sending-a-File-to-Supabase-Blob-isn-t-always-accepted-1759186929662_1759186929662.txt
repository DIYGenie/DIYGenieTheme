Goals

Fix image upload on web (TypeError) by sending a File to Supabase (Blob isn’t always accepted in browsers).

Show the yellow “Can’t reach server” banner only when /health fails, not for storage errors.

Increase horizontal padding on Projects to ~24 and tidy edge spacing.

Eliminate “Unexpected text node … child of <View>” warnings.

Files (only these):

app/lib/storage.ts

app/screens/NewProject.tsx

app/screens/Projects.tsx

app/components/Toast.tsx (or current toast)

app/components/*Empty* (if present)

(NEW) app/components/T.tsx tiny <Text> wrapper

Implementation

storage.ts (platform-aware upload)

import { Platform } from 'react-native';

function guessMime(uri:string){ return uri.toLowerCase().endsWith('.png') ? 'image/png' : 'image/jpeg'; }

export async function uploadImageAsync(projectId: string, uri: string) {
  const contentType = guessMime(uri);
  const ext = contentType === 'image/png' ? 'png' : 'jpg';
  const fileName = `${Date.now()}.${ext}`;
  const path = `projects/${projectId}/${fileName}`;

  const resp = await fetch(uri);            // works for web blob: and native file:// URIs
  const blob = await resp.blob();

  const file = Platform.OS === 'web'
    ? new File([blob], fileName, { type: contentType }) // **web needs File**
    : blob;                                             // native: Blob is fine

  const { error } = await supabase
    .storage.from(UPLOADS_BUCKET)
    .upload(path, file as any, { contentType, upsert: true });

  if (error) throw new Error(error.message);

  const { data: pub } = supabase.storage.from(UPLOADS_BUCKET).getPublicUrl(path);
  return pub?.publicUrl;
}


NewProject.tsx

Picker: ImagePicker.launchImageLibraryAsync({ mediaTypes: ImagePicker.MediaType.Images, quality: 0.9 }) (remove deprecated MediaTypeOptions).

Error handling: if upload throws a plain Error, show toast “Upload failed: …” and do not trigger the API banner.

Health banner gating (Projects + NewProject)

On mount, ping ${BASE_URL}/health. Keep apiHealthy state for 60s.

Only render the yellow banner when apiHealthy === false.

For any ApiError.status === 0, if apiHealthy === true, show a toast instead of the banner.

Projects spacing

Wrap list/empty content in a container with paddingHorizontal: 24 (and respect SafeArea).

Ensure the empty-state card also uses the same inset.

Text-node cleanup

Add app/components/T.tsx exporting a <Text> with Inter body style.

Search updated screens/components and wrap any raw strings under <View> (e.g., “Uploading…”, “Generating…”, separators, chip labels) with <Text>/<T> to remove the warning.

Acceptance

Selecting room.jpeg uploads successfully on web; on failure, a toast appears (no API banner).

Yellow banner only appears when /health fails.

No “Unexpected text node … <View>” warnings remain.

No expo-image-picker deprecation warning.

Projects screen content has ~24px side padding and looks balanced.