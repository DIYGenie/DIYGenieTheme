Goal: Everything on one screen. Dropdowns open cleanly. Two stacked square tiles (Scan Room, Upload Photo) sit fully above the tab bar and don’t get cut off.

Keep everything in NewProjectForm.tsx (single screen)

Use a scrollable, keyboard-aware container:

import { useSafeAreaInsets } from 'react-native-safe-area-context';
import { useBottomTabBarHeight } from '@react-navigation/bottom-tabs';
import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';

const insets = useSafeAreaInsets();
const tabBarHeight = useBottomTabBarHeight();


Wrap content:

<KeyboardAwareScrollView
  enableOnAndroid
  keyboardShouldPersistTaps="handled"
  contentContainerStyle={{
    paddingHorizontal: 20,
    paddingTop: 16,
    // IMPORTANT: enough space so the two tiles never sit under the tab bar
    paddingBottom: tabBarHeight + insets.bottom + 220,
  }}
>
  {/* form + media tiles… */}
</KeyboardAwareScrollView>


Dropdowns must overlay everything (no “smash”)

Render menus in a Portal / modal menu if your dropdown supports it.

Otherwise, set stacking on the field wrappers and allow overflow:

// parent containers
style={{ overflow: 'visible' }}

// Budget wrapper higher than Skill so they stack predictably
const budgetWrapper = { position: 'relative', zIndex: 30, elevation: 30 };
const skillWrapper  = { position: 'relative', zIndex: 20, elevation: 20 };

// dropdown menu container
menuStyle={{ zIndex: 1000, elevation: 1000 }}


Keep the label rows outside the dropdown menu view to avoid being covered.

Media section lives in normal flow (not sticky)

Place it after Skill Level, with a soft divider + caption:

<View style={{ marginTop: 24 }}>
  <View style={{ alignItems: 'center', marginBottom: 12 }}>
    <View style={{ height: 1, width: '100%', backgroundColor: 'rgba(229,231,235,0.9)' }} />
    <Text style={{
      position: 'absolute', top: -10, paddingHorizontal: 8,
      backgroundColor: '#FFF', color: '#6B7280', fontSize: 12, fontWeight: '600'
    }}>
      Add your room photo
    </Text>
  </View>

  {/* Stacked tiles */}
  <View style={{ alignItems: 'center', gap: 16 }}>
    {/* Scan Room */}
    <Pressable
      disabled={!isValid}
      style={({ pressed }) => ({
        width: 120, height: 120, borderRadius: 16,
        justifyContent: 'center', alignItems: 'center',
        backgroundColor: '#FFF',
        borderWidth: 1.5, borderColor: '#FBBF24',
        opacity: !isValid ? 0.6 : 1,
        shadowColor: '#000', shadowOpacity: 0.08, shadowRadius: 10,
        shadowOffset: { width: 0, height: 4 }, elevation: 6,
        transform: [{ scale: pressed && isValid ? 0.98 : 1 }],
      })}
      onPress={() => navigate('ScanRoomIntro')}
    >
      {/* camera icon (amber) + “Scan Room” (amber) */}
    </Pressable>

    {/* Upload Photo */}
    <Pressable
      disabled={!isValid}
      style={({ pressed }) => ({
        width: 120, height: 120, borderRadius: 16,
        justifyContent: 'center', alignItems: 'center',
        backgroundColor: '#FFF',
        borderWidth: 1, borderColor: '#E5E7EB',
        opacity: !isValid ? 0.6 : 1,
        shadowColor: '#000', shadowOpacity: 0.08, shadowRadius: 10,
        shadowOffset: { width: 0, height: 4 }, elevation: 6,
        transform: [{ scale: pressed && isValid ? 0.98 : 1 }],
      })}
      onPress={pickImageFromLibrary}
    >
      {/* photo icon (slate) + “Upload Photo” (slate) */}
    </Pressable>
  </View>
</View>


isValid = description length ≥ 10 AND budget selected AND skill selected.

Tiny form helpers

Under description show x/10 characters minimum (already present).

Align Budget and Skill inputs to same width as description; keep 16–20 px vertical gaps.

Deliver

Everything stays on this one page.

Scroll to the bottom: both square tiles are fully visible above the tab bar.

Opening Budget or Skill dropdown overlays the tiles cleanly.

Tiles enable only when the form is valid; both actions route as before.